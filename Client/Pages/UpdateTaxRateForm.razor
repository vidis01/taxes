@using TaxClient.Data
@using System.Text.Json
@using System.Text
@inject IHttpClientFactory ClientFactory

<EditForm Model="@SelectedRow" OnValidSubmit=@ValidUpdateFormSubmitted>
    <h1>Update municipality tax rate</h1>
    <hr />
    <div class="form-group row">
        <label for="id" class="col-sm-2 col-form-label">Id</label>
        <div class="col-sm-3">
            <InputNumber required id="id" class="form-control" disabled @bind-Value="SelectedRow.Id" />
        </div>
    </div>
    <div class="form-group row">
        <label for="period" class="col-sm-2 col-form-label">Period</label>
        <div class="col-sm-3">
            <InputSelect required id="period" class="form-control" disabled=@IsLoading @bind-Value="SelectedRow.Period">
                @foreach (Period period in Enum.GetValues(typeof(Period)))
                {
                    <option value="@period">@period</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="form-group row">
        <label for="fromdate" class="col-sm-2 col-form-label">From date</label>
        <div class="col-sm-3">
            <InputDate required id="fromdate" class="form-control" disabled=@IsLoading @bind-Value="SelectedRow.FromDate" />
        </div>
    </div>
    @if (SelectedRow.Period != Period.DAILY)
    {
        <div class="form-group row">
            <label for="todate" class="col-sm-2 col-form-label">To date</label>
            <div class="col-sm-3">
                <InputDate required id="todate" class="form-control" disabled=@IsLoading @bind-Value="SelectedRow.ToDate" />
            </div>
        </div>
    }
    <div class="form-group row">
        <label for="rate" class="col-sm-2 col-form-label">Rate</label>
        <div class="col-sm-3">
            <InputNumber required id="rate" class="form-control" disabled=@IsLoading @bind-Value="SelectedRow.Rate" min="0" max="1" />
        </div>
    </div>
    <div class="form-group row">
        <input type="submit" class="col-sm-5 btn btn-primary" disabled=@IsLoading value="Save">
    </div>

</EditForm>

@code {
    [Parameter]
    public TaxRateData SelectedRow { get; set; }

    [Parameter]
    public EventCallback<TaxRateData> SelectedRowChanged { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public EventCallback<bool> IsLoadingChanged { get; set; }

    private async void ValidUpdateFormSubmitted()
    {
        IsLoading = true;
        await IsLoadingChanged.InvokeAsync(IsLoading);

        var request = new HttpRequestMessage(HttpMethod.Put, $"https://localhost:5002/api/Tax");

        var jsonData = JsonSerializer.Serialize(SelectedRow);

        request.Content = new StringContent(jsonData, Encoding.UTF8, "application/json"); ;

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            await SelectedRowChanged.InvokeAsync(SelectedRow);
        }

        IsLoading = false;
        await IsLoadingChanged.InvokeAsync(IsLoading);
    }
}
